DECLARE SUB PRNTFT (DATQ!(), N2!)
DECLARE SUB TWOFFT (DATA1!(), DATA2!(), FFT1!(), FFT2!(), N!)
DECLARE SUB FOUR1 (DATQ!(), NN!, ISIGN!)

'PROGRAM D12R2
'Driver for routine TWOFFT
CLS
N = 32
N2 = 2 * N
PER = 8!
PI = 3.14159
DIM DATA1(N), DATA2(N), FFT1(N2), FFT2(N2)
FOR I = 1 TO N
  X = 2! * PI * I / PER
  DATA1(I) = INT(COS(X) + .5)
  DATA2(I) = INT(SIN(X) + .5)
NEXT I
CALL TWOFFT(DATA1(), DATA2(), FFT1(), FFT2(), N)
PRINT "Fourier transform of first function:"
CALL PRNTFT(FFT1(), N2)
PRINT "Fourier transform of second function:"
CALL PRNTFT(FFT2(), N2)
'Invert transform
ISIGN = -1
CALL FOUR1(FFT1(), N, ISIGN)
PRINT "Inverted transform = first function:"
CALL PRNTFT(FFT1(), N2)
CALL FOUR1(FFT2(), N, ISIGN)
PRINT "Inverted transform = second function:"
CALL PRNTFT(FFT2(), N2)
END

SUB PRNTFT (DATQ(), N2)
PRINT "     n     Real(n)    Imag.(n)   Real(N-n)   Imag.(N-n)"
PRINT USING "######"; 0;
PRINT USING "#####.######"; DATQ(1); DATQ(2); DATQ(1); DATQ(2)
FOR I = 3 TO N2 / 2 + 1 STEP 2
  M = (I - 1) / 2
  NN2 = N2 + 2 - I
  PRINT USING "######"; M;
  PRINT USING "#####.######"; DATQ(I); DATQ(I + 1); DATQ(NN2); DATQ(NN2 + 1)
NEXT I
PRINT
PRINT " press RETURN to continue ..."
LINE INPUT DUM$
END SUB

