DECLARE SUB MRQCOF (X!(), Y!(), SIG!(), NDATA!, A!(), MA!, LISTA!(), MFIT!, ALPHA!(), BETA!(), NALP!, CHISQ!, DUM!)
DECLARE SUB GAUSSJ (A!(), N!, NP!, B!(), M!, MP!)
DECLARE SUB COVSRT (COVAR!(), NCVM!, MA!, LISTA!(), MFIT!)
COMMON SHARED BETA()

SUB MRQMIN (X(), Y(), SIG(), NDATA, A(), MA, LISTA(), MFIT, COVAR(), ALPHA(), NCA, CHISQ, DUM, ALAMDA) STATIC
DIM ATRY(MA), DA(MA, 1)
IF ALAMDA < 0! THEN
  KK = MFIT + 1
  FOR J = 1 TO MA
    IHIT = 0
    FOR K = 1 TO MFIT
      IF LISTA(K) = J THEN IHIT = IHIT + 1
    NEXT K
    IF IHIT = 0 THEN
      LISTA(KK) = J
      KK = KK + 1
    ELSEIF IHIT > 1 THEN
      PRINT "Improper permutation in LISTA"
      EXIT SUB
    END IF
  NEXT J
  IF KK <> MA + 1 THEN PRINT "Improper permutation in LISTA": EXIT SUB
  ALAMDA = .001
  CALL MRQCOF(X(), Y(), SIG(), NDATA, A(), MA, LISTA(), MFIT, ALPHA(), BETA(), NCA, CHISQ, DUM)
  OCHISQ = CHISQ
  FOR J = 1 TO MA
    ATRY(J) = A(J)
  NEXT J
END IF
FOR J = 1 TO MFIT
  FOR K = 1 TO MFIT
    COVAR(J, K) = ALPHA(J, K)
  NEXT K
  COVAR(J, J) = ALPHA(J, J) * (1! + ALAMDA)
  DA(J, 1) = BETA(J, 1)
NEXT J
CALL GAUSSJ(COVAR(), MFIT, NCA, DA(), 1, 1)
IF ALAMDA = 0! THEN
  CALL COVSRT(COVAR(), NCA, MA, LISTA(), MFIT)
  ERASE DA, ATRY
  EXIT SUB
END IF
FOR J = 1 TO MFIT
  ATRY(LISTA(J)) = A(LISTA(J)) + DA(J, 1)
NEXT J
CALL MRQCOF(X(), Y(), SIG(), NDATA, ATRY(), MA, LISTA(), MFIT, COVAR(), DA(), NCA, CHISQ, DUM)
IF CHISQ < OCHISQ THEN
  ALAMDA = .1 * ALAMDA
  OCHISQ = CHISQ
  FOR J = 1 TO MFIT
    FOR K = 1 TO MFIT
      ALPHA(J, K) = COVAR(J, K)
    NEXT K
    BETA(J, 1) = DA(J, 1)
    A(LISTA(J)) = ATRY(LISTA(J))
  NEXT J
ELSE
  ALAMDA = 10! * ALAMDA
  CHISQ = OCHISQ
END IF
ERASE DA, ATRY
END SUB

