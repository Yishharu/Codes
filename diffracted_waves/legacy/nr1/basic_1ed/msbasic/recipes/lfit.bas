DECLARE SUB FUNCS (X!, AFUNC!(), MA!)
DECLARE SUB GAUSSJ (A!(), N!, NP!, B!(), M!, MP!)
DECLARE SUB COVSRT (COVAR!(), NCVM!, MA!, LISTA!(), MFIT!)

SUB LFIT (X(), Y(), SIG(), NDATA, A(), MA, LISTA(), MFIT, COVAR(), NCVM, CHISQ, DUM)
DIM BETA(MA, 1), AFUNC(MA)
KK = MFIT + 1
FOR J = 1 TO MA
  IHIT = 0
  FOR K = 1 TO MFIT
    IF LISTA(K) = J THEN IHIT = IHIT + 1
  NEXT K
  IF IHIT = 0 THEN
    LISTA(KK) = J
    KK = KK + 1
  ELSEIF IHIT > 1 THEN
    PRINT "Improper set in LISTA"
    EXIT SUB
  END IF
NEXT J
IF KK <> (MA + 1) THEN PRINT "Improper set in LISTA": EXIT SUB
FOR J = 1 TO MFIT
  FOR K = 1 TO MFIT
    COVAR(J, K) = 0!
  NEXT K
  BETA(J, 1) = 0!
NEXT J
FOR I = 1 TO NDATA
  CALL FUNCS(X(I), AFUNC(), MA)
  YM = Y(I)
  IF MFIT < MA THEN
    FOR J = MFIT + 1 TO MA
      YM = YM - A(LISTA(J)) * AFUNC(LISTA(J))
    NEXT J
  END IF
  SIG2I = 1! / SIG(I) ^ 2
  FOR J = 1 TO MFIT
    WT = AFUNC(LISTA(J)) * SIG2I
    FOR K = 1 TO J
      COVAR(J, K) = COVAR(J, K) + WT * AFUNC(LISTA(K))
    NEXT K
    BETA(J, 1) = BETA(J, 1) + YM * WT
  NEXT J
NEXT I
IF MFIT > 1 THEN
  FOR J = 2 TO MFIT
    FOR K = 1 TO J - 1
      COVAR(K, J) = COVAR(J, K)
    NEXT K
  NEXT J
END IF
CALL GAUSSJ(COVAR(), MFIT, NCVM, BETA(), 1, 1)
FOR J = 1 TO MFIT
  A(LISTA(J)) = BETA(J, 1)
NEXT J
CHISQ = 0!
FOR I = 1 TO NDATA
  CALL FUNCS(X(I), AFUNC(), MA)
  SUM = 0!
  FOR J = 1 TO MA
    SUM = SUM + A(J) * AFUNC(J)
  NEXT J
  CHISQ = CHISQ + ((Y(I) - SUM) / SIG(I)) ^ 2
NEXT I
CALL COVSRT(COVAR(), NCVM, MA, LISTA(), MFIT)
ERASE AFUNC, BETA
END SUB

