<html><head><title>NRcdrom Progs. Internet/Server Use Prohibited.</title>
</head>
<body><h1>Numerical Recipes Routines by Chapter and Section</h1>

Chapter number links jump to the corresponding place in the
book Table of Contents.  (Click on the Chapter number to get back.)
Routine name links jump to the listing
of the program.  Example links jump to an example program that
shows the use of the routine.<p>
<h3><a name="C1"></A><A HREF="toc.htm#C1">Chapter
1</a></h3>
<menu>
<li>[1.0]
<a href="recipes/flmoon.for"><b>flmoon</b></a> calculate phases of the moon by date
 (<a href="examples/xflmoon.for">example</a>)<li>[1.1]
<a href="recipes/julday.for"><b>julday</b></a> Julian Day number from calendar date
 (<a href="examples/xjulday.for">example</a>)<li>[1.1]
<a href="recipes/badluk.for"><b>badluk</b></a> Friday the 13th when the moon is full
<li>[1.1]
<a href="recipes/caldat.for"><b>caldat</b></a> calendar date from Julian day number
 (<a href="examples/xcaldat.for">example</a>)</menu>
<h3><a name="C2"></A><A HREF="toc.htm#C2">Chapter
2</a></h3>
<menu>
<li>[2.1]
<a href="recipes/gaussj.for"><b>gaussj</b></a> Gauss-Jordan matrix inversion and linear equation solution
 (<a href="examples/xgaussj.for">example</a>)<li>[2.3]
<a href="recipes/ludcmp.for"><b>ludcmp</b></a> linear equation solution, LU decomposition
 (<a href="examples/xludcmp.for">example</a>)<li>[2.3]
<a href="recipes/lubksb.for"><b>lubksb</b></a> linear equation solution, backsubstitution
 (<a href="examples/xlubksb.for">example</a>)<li>[2.4]
<a href="recipes/tridag.for"><b>tridag</b></a> solution of tridiagonal systems
 (<a href="examples/xtridag.for">example</a>)<li>[2.4]
<a href="recipes/banmul.for"><b>banmul</b></a> multiply vector by band diagonal matrix
 (<a href="examples/xbanmul.for">example</a>)<li>[2.4]
<a href="recipes/bandec.for"><b>bandec</b></a> band diagonal systems, decomposition
 (<a href="examples/xbandec.for">example</a>)<li>[2.4]
<a href="recipes/banbks.for"><b>banbks</b></a> band diagonal systems, backsubstitution
<li>[2.5]
<a href="recipes/mprove.for"><b>mprove</b></a> linear equation solution, iterative improvement
 (<a href="examples/xmprove.for">example</a>)<li>[2.6]
<a href="recipes/svbksb.for"><b>svbksb</b></a> singular value backsubstitution
 (<a href="examples/xsvbksb.for">example</a>)<li>[2.6]
<a href="recipes/svdcmp.for"><b>svdcmp</b></a> singular value decomposition of a matrix
 (<a href="examples/xsvdcmp.for">example</a>)<li>[2.6]
<a href="recipes/pythag.for"><b>pythag</b></a> calculate (a^2+b^2)^{1/2} without overflow
<li>[2.7]
<a href="recipes/cyclic.for"><b>cyclic</b></a> solution of cyclic tridiagonal systems
 (<a href="examples/xcyclic.for">example</a>)<li>[2.7]
<a href="recipes/sprsin.for"><b>sprsin</b></a> convert matrix to sparse format
 (<a href="examples/xsprsin.for">example</a>)<li>[2.7]
<a href="recipes/sprsax.for"><b>sprsax</b></a> product of sparse matrix and vector
 (<a href="examples/xsprsax.for">example</a>)<li>[2.7]
<a href="recipes/sprstx.for"><b>sprstx</b></a> product of transpose sparse matrix and vector
 (<a href="examples/xsprstx.for">example</a>)<li>[2.7]
<a href="recipes/sprstp.for"><b>sprstp</b></a> transpose of sparse matrix
 (<a href="examples/xsprstp.for">example</a>)<li>[2.7]
<a href="recipes/sprspm.for"><b>sprspm</b></a> pattern multiply two sparse matrices
 (<a href="examples/xsprspm.for">example</a>)<li>[2.7]
<a href="recipes/sprstm.for"><b>sprstm</b></a> threshold multiply two sparse matrices
 (<a href="examples/xsprstm.for">example</a>)<li>[2.7]
<a href="recipes/linbcg.for"><b>linbcg</b></a> biconjugate gradient solution of sparse systems
 (<a href="examples/xlinbcg.for">example</a>)<li>[2.7]
<a href="recipes/snrm.for"><b>snrm </b></a> used by linbcg for vector norm
<li>[2.7]
<a href="recipes/atimes.for"><b>atimes</b></a> used by linbcg for sparse multiplication
<li>[2.7]
<a href="recipes/asolve.for"><b>asolve</b></a> used by linbcg for preconditioner
<li>[2.8]
<a href="recipes/vander.for"><b>vander</b></a> solve Vandermonde systems
 (<a href="examples/xvander.for">example</a>)<li>[2.8]
<a href="recipes/toeplz.for"><b>toeplz</b></a> solve Toeplitz systems
 (<a href="examples/xtoeplz.for">example</a>)<li>[2.9]
<a href="recipes/choldc.for"><b>choldc</b></a> Cholesky decomposition
<li>[2.9]
<a href="recipes/cholsl.for"><b>cholsl</b></a> Cholesky backsubstitution
 (<a href="examples/xcholsl.for">example</a>)<li>[2.10]
<a href="recipes/qrdcmp.for"><b>qrdcmp</b></a> QR decomposition
 (<a href="examples/xqrdcmp.for">example</a>)<li>[2.10]
<a href="recipes/qrsolv.for"><b>qrsolv</b></a> QR backsubstitution
 (<a href="examples/xqrsolv.for">example</a>)<li>[2.10]
<a href="recipes/rsolv.for"><b>rsolv</b></a> right triangular backsubstitution
<li>[2.10]
<a href="recipes/qrupdt.for"><b>qrupdt</b></a> update a QR decomposition
 (<a href="examples/xqrupdt.for">example</a>)<li>[2.10]
<a href="recipes/rotate.for"><b>rotate</b></a> Jacobi rotation used by qrupdt
</menu>
<h3><a name="C3"></A><A HREF="toc.htm#C3">Chapter
3</a></h3>
<menu>
<li>[3.1]
<a href="recipes/polint.for"><b>polint</b></a> polynomial interpolation
 (<a href="examples/xpolint.for">example</a>)<li>[3.2]
<a href="recipes/ratint.for"><b>ratint</b></a> rational function interpolation
 (<a href="examples/xratint.for">example</a>)<li>[3.3]
<a href="recipes/spline.for"><b>spline</b></a> construct a cubic spline
 (<a href="examples/xspline.for">example</a>)<li>[3.3]
<a href="recipes/splint.for"><b>splint</b></a> cubic spline interpolation
 (<a href="examples/xsplint.for">example</a>)<li>[3.4]
<a href="recipes/locate.for"><b>locate</b></a> search an ordered table by bisection
 (<a href="examples/xlocate.for">example</a>)<li>[3.4]
<a href="recipes/hunt.for"><b>hunt</b></a> search a table when calls are correlated
 (<a href="examples/xhunt.for">example</a>)<li>[3.5]
<a href="recipes/polcoe.for"><b>polcoe</b></a> polynomial coefficients from table of values
 (<a href="examples/xpolcoe.for">example</a>)<li>[3.5]
<a href="recipes/polcof.for"><b>polcof</b></a> polynomial coefficients from table of values
 (<a href="examples/xpolcof.for">example</a>)<li>[3.6]
<a href="recipes/polin2.for"><b>polin2</b></a> two-dimensional polynomial interpolation
 (<a href="examples/xpolin2.for">example</a>)<li>[3.6]
<a href="recipes/bcucof.for"><b>bcucof</b></a> construct two-dimensional bicubic
 (<a href="examples/xbcucof.for">example</a>)<li>[3.6]
<a href="recipes/bcuint.for"><b>bcuint</b></a> two-dimensional bicubic interpolation
 (<a href="examples/xbcuint.for">example</a>)<li>[3.6]
<a href="recipes/splie2.for"><b>splie2</b></a> construct two-dimensional spline
 (<a href="examples/xsplie2.for">example</a>)<li>[3.6]
<a href="recipes/splin2.for"><b>splin2</b></a> two-dimensional spline interpolation
 (<a href="examples/xsplin2.for">example</a>)</menu>
<h3><a name="C4"></A><A HREF="toc.htm#C4">Chapter
4</a></h3>
<menu>
<li>[4.2]
<a href="recipes/trapzd.for"><b>trapzd</b></a> trapezoidal rule
 (<a href="examples/xtrapzd.for">example</a>)<li>[4.2]
<a href="recipes/qtrap.for"><b>qtrap</b></a> integrate using trapezoidal rule
 (<a href="examples/xqtrap.for">example</a>)<li>[4.2]
<a href="recipes/qsimp.for"><b>qsimp</b></a> integrate using Simpson's rule
 (<a href="examples/xqsimp.for">example</a>)<li>[4.3]
<a href="recipes/qromb.for"><b>qromb</b></a> integrate using Romberg adaptive method
 (<a href="examples/xqromb.for">example</a>)<li>[4.4]
<a href="recipes/midpnt.for"><b>midpnt</b></a> extended midpoint rule
 (<a href="examples/xmidpnt.for">example</a>)<li>[4.4]
<a href="recipes/qromo.for"><b>qromo</b></a> integrate using open Romberg adaptive method
 (<a href="examples/xqromo.for">example</a>)<li>[4.4]
<a href="recipes/midinf.for"><b>midinf</b></a> integrate a function on a semi-infinite interval
<li>[4.4]
<a href="recipes/midsql.for"><b>midsql</b></a> integrate a function with lower square-root singularity
<li>[4.4]
<a href="recipes/midsqu.for"><b>midsqu</b></a> integrate a function with upper square-root singularity
<li>[4.4]
<a href="recipes/midexp.for"><b>midexp</b></a> integrate a function that decreases exponentially
<li>[4.5]
<a href="recipes/qgaus.for"><b>qgaus</b></a> integrate a function by Gaussian quadratures
 (<a href="examples/xqgaus.for">example</a>)<li>[4.5]
<a href="recipes/gauleg.for"><b>gauleg</b></a> Gauss-Legendre weights and abscissas
 (<a href="examples/xgauleg.for">example</a>)<li>[4.5]
<a href="recipes/gaulag.for"><b>gaulag</b></a> Gauss-Laguerre weights and abscissas
 (<a href="examples/xgaulag.for">example</a>)<li>[4.5]
<a href="recipes/gauher.for"><b>gauher</b></a> Gauss-Hermite weights and abscissas
 (<a href="examples/xgauher.for">example</a>)<li>[4.5]
<a href="recipes/gaujac.for"><b>gaujac</b></a> Gauss-Jacobi weights and abscissas
 (<a href="examples/xgaujac.for">example</a>)<li>[4.5]
<a href="recipes/gaucof.for"><b>gaucof</b></a> quadrature weights from orthogonal polynomials
 (<a href="examples/xgaucof.for">example</a>)<li>[4.5]
<a href="recipes/orthog.for"><b>orthog</b></a> construct nonclassical orthogonal polynomials
 (<a href="examples/xorthog.for">example</a>)<li>[4.6]
<a href="recipes/quad3d.for"><b>quad3d</b></a> integrate a function over a three-dimensional space
 (<a href="examples/xquad3d.for">example</a>)</menu>
<h3><a name="C5"></A><A HREF="toc.htm#C5">Chapter
5</a></h3>
<menu>
<li>[5.1]
<a href="recipes/eulsum.for"><b>eulsum</b></a> sum a series by Euler--van Wijngaarden algorithm
 (<a href="examples/xeulsum.for">example</a>)<li>[5.3]
<a href="recipes/ddpoly.for"><b>ddpoly</b></a> evaluate a polynomial and its derivatives
 (<a href="examples/xddpoly.for">example</a>)<li>[5.3]
<a href="recipes/poldiv.for"><b>poldiv</b></a> divide one polynomial by another
 (<a href="examples/xpoldiv.for">example</a>)<li>[5.3]
<a href="recipes/ratval.for"><b>ratval</b></a> evaluate a rational function
<li>[5.7]
<a href="recipes/dfridr.for"><b>dfridr</b></a> numerical derivative by Ridders' method
 (<a href="examples/xdfridr.for">example</a>)<li>[5.8]
<a href="recipes/chebft.for"><b>chebft</b></a> fit a Chebyshev polynomial to a function
 (<a href="examples/xchebft.for">example</a>)<li>[5.8]
<a href="recipes/chebev.for"><b>chebev</b></a> Chebyshev polynomial evaluation
 (<a href="examples/xchebev.for">example</a>)<li>[5.9]
<a href="recipes/chder.for"><b>chder</b></a> derivative of a function already Chebyshev fitted
 (<a href="examples/xchder.for">example</a>)<li>[5.9]
<a href="recipes/chint.for"><b>chint</b></a> integrate a function already Chebyshev fitted
 (<a href="examples/xchint.for">example</a>)<li>[5.10]
<a href="recipes/chebpc.for"><b>chebpc</b></a> polynomial coefficients from a Chebyshev fit
 (<a href="examples/xchebpc.for">example</a>)<li>[5.10]
<a href="recipes/pcshft.for"><b>pcshft</b></a> polynomial coefficients of a shifted polynomial
 (<a href="examples/xpcshft.for">example</a>)<li>[5.11]
<a href="recipes/pccheb.for"><b>pccheb</b></a> inverse of chebpc; use to economize power series
 (<a href="examples/xpccheb.for">example</a>)<li>[5.12]
<a href="recipes/pade.for"><b>pade</b></a> Pade approximant from power series coefficients
 (<a href="examples/xpade.for">example</a>)<li>[5.13]
<a href="recipes/ratlsq.for"><b>ratlsq</b></a> rational fit by least-squares method
 (<a href="examples/xratlsq.for">example</a>)</menu>
<h3><a name="C6"></A><A HREF="toc.htm#C6">Chapter
6</a></h3>
<menu>
<li>[6.1]
<a href="recipes/gammln.for"><b>gammln</b></a> logarithm of gamma function
 (<a href="examples/xgammln.for">example</a>)<li>[6.1]
<a href="recipes/factrl.for"><b>factrl</b></a> factorial function
 (<a href="examples/xfactrl.for">example</a>)<li>[6.1]
<a href="recipes/bico.for"><b>bico</b></a> binomial coefficients function
 (<a href="examples/xbico.for">example</a>)<li>[6.1]
<a href="recipes/factln.for"><b>factln</b></a> logarithm of factorial function
 (<a href="examples/xfactln.for">example</a>)<li>[6.1]
<a href="recipes/beta.for"><b>beta</b></a> beta function
 (<a href="examples/xbeta.for">example</a>)<li>[6.2]
<a href="recipes/gammp.for"><b>gammp</b></a> incomplete gamma function
 (<a href="examples/xgammp.for">example</a>)<li>[6.2]
<a href="recipes/gammq.for"><b>gammq</b></a> complement of incomplete gamma function
 (<a href="examples/xgammq.for">example</a>)<li>[6.2]
<a href="recipes/gser.for"><b>gser</b></a> series used by gammp and gammq
 (<a href="examples/xgser.for">example</a>)<li>[6.2]
<a href="recipes/gcf.for"><b>gcf</b></a> continued fraction used by gammp and gammq
 (<a href="examples/xgcf.for">example</a>)<li>[6.2]
<a href="recipes/erf.for"><b>erf</b></a> error function
<li>[6.2]
<a href="recipes/erfc.for"><b>erfc</b></a> complementary error function
<li>[6.2]
<a href="recipes/erfcc.for"><b>erfcc</b></a> complementary error function, concise routine
 (<a href="examples/xerfcc.for">example</a>)<li>[6.3]
<a href="recipes/expint.for"><b>expint</b></a> exponential integral E_n
 (<a href="examples/xexpint.for">example</a>)<li>[6.3]
<a href="recipes/ei.for"><b>ei</b></a> exponential integral Ei
 (<a href="examples/xei.for">example</a>)<li>[6.4]
<a href="recipes/betai.for"><b>betai</b></a> incomplete beta function
 (<a href="examples/xbetai.for">example</a>)<li>[6.4]
<a href="recipes/betacf.for"><b>betacf</b></a> continued fraction used by betai
<li>[6.5]
<a href="recipes/bessj0.for"><b>bessj0</b></a> Bessel function J_0
 (<a href="examples/xbessj0.for">example</a>)<li>[6.5]
<a href="recipes/bessy0.for"><b>bessy0</b></a> Bessel function Y_0
 (<a href="examples/xbessy0.for">example</a>)<li>[6.5]
<a href="recipes/bessj1.for"><b>bessj1</b></a> Bessel function J_1
 (<a href="examples/xbessj1.for">example</a>)<li>[6.5]
<a href="recipes/bessy1.for"><b>bessy1</b></a> Bessel function Y_1
 (<a href="examples/xbessy1.for">example</a>)<li>[6.5]
<a href="recipes/bessy.for"><b>bessy</b></a> Bessel function Y of general integer order
 (<a href="examples/xbessy.for">example</a>)<li>[6.5]
<a href="recipes/bessj.for"><b>bessj</b></a> Bessel function J of general integer order
 (<a href="examples/xbessj.for">example</a>)<li>[6.6]
<a href="recipes/bessi0.for"><b>bessi0</b></a> modified Bessel function I_0
 (<a href="examples/xbessi0.for">example</a>)<li>[6.6]
<a href="recipes/bessk0.for"><b>bessk0</b></a> modified Bessel function K_0
 (<a href="examples/xbessk0.for">example</a>)<li>[6.6]
<a href="recipes/bessi1.for"><b>bessi1</b></a> modified Bessel function I_1
 (<a href="examples/xbessi1.for">example</a>)<li>[6.6]
<a href="recipes/bessk1.for"><b>bessk1</b></a> modified Bessel function K_1
 (<a href="examples/xbessk1.for">example</a>)<li>[6.6]
<a href="recipes/bessk.for"><b>bessk</b></a> modified Bessel function K of integer order
 (<a href="examples/xbessk.for">example</a>)<li>[6.6]
<a href="recipes/bessi.for"><b>bessi</b></a> modified Bessel function I of integer order
 (<a href="examples/xbessi.for">example</a>)<li>[6.7]
<a href="recipes/bessjy.for"><b>bessjy</b></a> Bessel functions of fractional order
 (<a href="examples/xbessjy.for">example</a>)<li>[6.7]
<a href="recipes/beschb.for"><b>beschb</b></a> Chebyshev expansion used by bessjy
 (<a href="examples/xbeschb.for">example</a>)<li>[6.7]
<a href="recipes/bessik.for"><b>bessik</b></a> modified Bessel functions of fractional order
 (<a href="examples/xbessik.for">example</a>)<li>[6.7]
<a href="recipes/airy.for"><b>airy </b></a> Airy functions
<li>[6.7]
<a href="recipes/sphbes.for"><b>sphbes</b></a> spherical Bessel functions j_n and y_n
 (<a href="examples/xsphbes.for">example</a>)<li>[6.8]
<a href="recipes/plgndr.for"><b>plgndr</b></a> Legendre polynomials, associated (spherical harmonics)
 (<a href="examples/xplgndr.for">example</a>)<li>[6.9]
<a href="recipes/frenel.for"><b>frenel</b></a> Fresnel integrals S(x) and C(x)
 (<a href="examples/xfrenel.for">example</a>)<li>[6.9]
<a href="recipes/cisi.for"><b>cisi </b></a> cosine and sine integrals Ci and Si
<li>[6.10]
<a href="recipes/dawson.for"><b>dawson</b></a> Dawson's integral
 (<a href="examples/xdawson.for">example</a>)<li>[6.11]
<a href="recipes/rf.for"><b>rf</b></a> Carlson's elliptic integral of the first kind
 (<a href="examples/xrf.for">example</a>)<li>[6.11]
<a href="recipes/rd.for"><b>rd</b></a> Carlson's elliptic integral of the second kind
 (<a href="examples/xrd.for">example</a>)<li>[6.11]
<a href="recipes/rj.for"><b>rj</b></a> Carlson's elliptic integral of the third kind
 (<a href="examples/xrj.for">example</a>)<li>[6.11]
<a href="recipes/rc.for"><b>rc</b></a> Carlson's degenerate elliptic integral
 (<a href="examples/xrc.for">example</a>)<li>[6.11]
<a href="recipes/ellf.for"><b>ellf</b></a> Legendre elliptic integral of the first kind
 (<a href="examples/xellf.for">example</a>)<li>[6.11]
<a href="recipes/elle.for"><b>elle</b></a> Legendre elliptic integral of the second kind
 (<a href="examples/xelle.for">example</a>)<li>[6.11]
<a href="recipes/ellpi.for"><b>ellpi</b></a> Legendre elliptic integral of the third kind
 (<a href="examples/xellpi.for">example</a>)<li>[6.11]
<a href="recipes/sncndn.for"><b>sncndn</b></a> Jacobian elliptic functions
 (<a href="examples/xsncndn.for">example</a>)<li>[6.12]
<a href="recipes/hypgeo.for"><b>hypgeo</b></a> complex hypergeometric function
 (<a href="examples/xhypgeo.for">example</a>)<li>[6.12]
<a href="recipes/hypser.for"><b>hypser</b></a> complex hypergeometric function, series evaluation
<li>[6.12]
<a href="recipes/hypdrv.for"><b>hypdrv</b></a> complex hypergeometric function, derivative of
</menu>
<h3><a name="C7"></A><A HREF="toc.htm#C7">Chapter
7</a></h3>
<menu>
<li>[7.1]
<a href="recipes/ran0.for"><b>ran0</b></a> random deviate by Park and Miller minimal standard
<li>[7.1]
<a href="recipes/ran1.for"><b>ran1</b></a> random deviate, minimal standard plus shuffle
<li>[7.1]
<a href="recipes/ran2.for"><b>ran2</b></a> random deviate by L'Ecuyer long period plus shuffle
<li>[7.1]
<a href="recipes/ran3.for"><b>ran3</b></a> random deviate by Knuth subtractive method
<li>[7.2]
<a href="recipes/expdev.for"><b>expdev</b></a> exponential random deviates
 (<a href="examples/xexpdev.for">example</a>)<li>[7.2]
<a href="recipes/gasdev.for"><b>gasdev</b></a> normally distributed random deviates
 (<a href="examples/xgasdev.for">example</a>)<li>[7.3]
<a href="recipes/gamdev.for"><b>gamdev</b></a> gamma-law distribution random deviates
 (<a href="examples/xgamdev.for">example</a>)<li>[7.3]
<a href="recipes/poidev.for"><b>poidev</b></a> Poisson distributed random deviates
 (<a href="examples/xpoidev.for">example</a>)<li>[7.3]
<a href="recipes/bnldev.for"><b>bnldev</b></a> binomial distributed random deviates
 (<a href="examples/xbnldev.for">example</a>)<li>[7.4]
<a href="recipes/irbit1.for"><b>irbit1</b></a> random bit sequence
 (<a href="examples/xirbit1.for">example</a>)<li>[7.4]
<a href="recipes/irbit2.for"><b>irbit2</b></a> random bit sequence
 (<a href="examples/xirbit2.for">example</a>)<li>[7.5]
<a href="recipes/psdes.for"><b>psdes</b></a> ``pseudo-DES'' hashing of 64 bits
 (<a href="examples/xpsdes.for">example</a>)<li>[7.5]
<a href="recipes/ran4.for"><b>ran4</b></a> random deviates from DES-like hashing
 (<a href="examples/xran4.for">example</a>)<li>[7.7]
<a href="recipes/sobseq.for"><b>sobseq</b></a> Sobol's quasi-random sequence
 (<a href="examples/xsobseq.for">example</a>)<li>[7.8]
<a href="recipes/vegas.for"><b>vegas</b></a> adaptive multidimensional Monte Carlo integration
 (<a href="examples/xvegas.for">example</a>)<li>[7.8]
<a href="recipes/rebin.for"><b>rebin</b></a> sample rebinning used by vegas
<li>[7.8]
<a href="recipes/miser.for"><b>miser</b></a> recursive multidimensional Monte Carlo integration
 (<a href="examples/xmiser.for">example</a>)<li>[7.8]
<a href="recipes/ranpt.for"><b>ranpt</b></a> get random point, used by miser
</menu>
<h3><a name="C8"></A><A HREF="toc.htm#C8">Chapter
8</a></h3>
<menu>
<li>[8.1]
<a href="recipes/piksrt.for"><b>piksrt</b></a> sort an array by straight insertion
 (<a href="examples/xpiksrt.for">example</a>)<li>[8.1]
<a href="recipes/piksr2.for"><b>piksr2</b></a> sort two arrays by straight insertion
 (<a href="examples/xpiksr2.for">example</a>)<li>[8.1]
<a href="recipes/shell.for"><b>shell</b></a> sort an array by Shell's method
 (<a href="examples/xshell.for">example</a>)<li>[8.2]
<a href="recipes/sort.for"><b>sort</b></a> sort an array by quicksort method
 (<a href="examples/xsort.for">example</a>)<li>[8.2]
<a href="recipes/sort2.for"><b>sort2</b></a> sort two arrays by quicksort method
 (<a href="examples/xsort2.for">example</a>)<li>[8.3]
<a href="recipes/hpsort.for"><b>hpsort</b></a> sort an array by heapsort method
 (<a href="examples/xhpsort.for">example</a>)<li>[8.4]
<a href="recipes/indexx.for"><b>indexx</b></a> construct an index for an array
 (<a href="examples/xindexx.for">example</a>)<li>[8.4]
<a href="recipes/sort3.for"><b>sort3</b></a> sort, use an index to sort 3 or more arrays
 (<a href="examples/xsort3.for">example</a>)<li>[8.4]
<a href="recipes/rank.for"><b>rank</b></a> construct a rank table for an array
 (<a href="examples/xrank.for">example</a>)<li>[8.5]
<a href="recipes/select.for"><b>select</b></a> find the Nth largest in an array
 (<a href="examples/xselect.for">example</a>)<li>[8.5]
<a href="recipes/selip.for"><b>selip</b></a> find the Nth largest, without altering an array
 (<a href="examples/xselip.for">example</a>)<li>[8.5]
<a href="recipes/hpsel.for"><b>hpsel</b></a> find M largest values, without altering an array
 (<a href="examples/xhpsel.for">example</a>)<li>[8.6]
<a href="recipes/eclass.for"><b>eclass</b></a> determine equivalence classes from list
 (<a href="examples/xeclass.for">example</a>)<li>[8.6]
<a href="recipes/eclazz.for"><b>eclazz</b></a> determine equivalence classes from procedure
 (<a href="examples/xeclazz.for">example</a>)</menu>
<h3><a name="C9"></A><A HREF="toc.htm#C9">Chapter
9</a></h3>
<menu>
<li>[9.0]
<a href="recipes/scrsho.for"><b>scrsho</b></a> graph a function to search for roots
 (<a href="examples/xscrsho.for">example</a>)<li>[9.1]
<a href="recipes/zbrac.for"><b>zbrac</b></a> outward search for brackets on roots
 (<a href="examples/xzbrac.for">example</a>)<li>[9.1]
<a href="recipes/zbrak.for"><b>zbrak</b></a> inward search for brackets on roots
 (<a href="examples/xzbrak.for">example</a>)<li>[9.1]
<a href="recipes/rtbis.for"><b>rtbis</b></a> find root of a function by bisection
 (<a href="examples/xrtbis.for">example</a>)<li>[9.2]
<a href="recipes/rtflsp.for"><b>rtflsp</b></a> find root of a function by false-position
 (<a href="examples/xrtflsp.for">example</a>)<li>[9.2]
<a href="recipes/rtsec.for"><b>rtsec</b></a> find root of a function by secant method
 (<a href="examples/xrtsec.for">example</a>)<li>[9.2]
<a href="recipes/zriddr.for"><b>zriddr</b></a> find root of a function by Ridders' method
 (<a href="examples/xzriddr.for">example</a>)<li>[9.3]
<a href="recipes/zbrent.for"><b>zbrent</b></a> find root of a function by Brent's method
 (<a href="examples/xzbrent.for">example</a>)<li>[9.4]
<a href="recipes/rtnewt.for"><b>rtnewt</b></a> find root of a function by Newton-Raphson
 (<a href="examples/xrtnewt.for">example</a>)<li>[9.4]
<a href="recipes/rtsafe.for"><b>rtsafe</b></a> find root of a function by Newton-Raphson and bisection
 (<a href="examples/xrtsafe.for">example</a>)<li>[9.5]
<a href="recipes/laguer.for"><b>laguer</b></a> find a root of a polynomial by Laguerre's method
 (<a href="examples/xlaguer.for">example</a>)<li>[9.5]
<a href="recipes/zroots.for"><b>zroots</b></a> roots of a polynomial by Laguerre's method with deflation
 (<a href="examples/xzroots.for">example</a>)<li>[9.5]
<a href="recipes/zrhqr.for"><b>zrhqr</b></a> roots of a polynomial by eigenvalue methods
 (<a href="examples/xzrhqr.for">example</a>)<li>[9.5]
<a href="recipes/qroot.for"><b>qroot</b></a> complex or double root of a polynomial, Bairstow
 (<a href="examples/xqroot.for">example</a>)<li>[9.6]
<a href="recipes/mnewt.for"><b>mnewt</b></a> Newton's method for systems of equations
 (<a href="examples/xmnewt.for">example</a>)<li>[9.7]
<a href="recipes/lnsrch.for"><b>lnsrch</b></a> search along a line, used by newt
<li>[9.7]
<a href="recipes/newt.for"><b>newt</b></a> globally convergent multi-dimensional Newton's method
 (<a href="examples/xnewt.for">example</a>)<li>[9.7]
<a href="recipes/fdjac.for"><b>fdjac</b></a> finite-difference Jacobian, used by newt
<li>[9.7]
<a href="recipes/fmin.for"><b>fmin</b></a> norm of a vector function, used by newt
<li>[9.7]
<a href="recipes/broydn.for"><b>broydn</b></a> secant method for systems of equations
 (<a href="examples/xbroydn.for">example</a>)</menu>
<h3><a name="C10"></A><A HREF="toc.htm#C10">Chapter
10</a></h3>
<menu>
<li>[10.1]
<a href="recipes/mnbrak.for"><b>mnbrak</b></a> bracket the minimum of a function
 (<a href="examples/xmnbrak.for">example</a>)<li>[10.1]
<a href="recipes/golden.for"><b>golden</b></a> find minimum of a function by golden section search
 (<a href="examples/xgolden.for">example</a>)<li>[10.2]
<a href="recipes/brent.for"><b>brent</b></a> find minimum of a function by Brent's method
 (<a href="examples/xbrent.for">example</a>)<li>[10.3]
<a href="recipes/dbrent.for"><b>dbrent</b></a> find minimum of a function using derivative information
 (<a href="examples/xdbrent.for">example</a>)<li>[10.4]
<a href="recipes/amoeba.for"><b>amoeba</b></a> minimize in N-dimensions by downhill simplex method
 (<a href="examples/xamoeba.for">example</a>)<li>[10.4]
<a href="recipes/amotry.for"><b>amotry</b></a> evaluate a trial point, used by amoeba
<li>[10.5]
<a href="recipes/powell.for"><b>powell</b></a> minimize in N-dimensions by  Powell's method
 (<a href="examples/xpowell.for">example</a>)<li>[10.5]
<a href="recipes/linmin.for"><b>linmin</b></a> minimum of a function along a ray in N-dimensions
 (<a href="examples/xlinmin.for">example</a>)<li>[10.5]
<a href="recipes/f1dim.for"><b>f1dim</b></a> function used by LINMIN
 (<a href="examples/xf1dim.for">example</a>)<li>[10.6]
<a href="recipes/frprmn.for"><b>frprmn</b></a> minimize in N-dimensions by conjugate gradient
 (<a href="examples/xfrprmn.for">example</a>)<li>[10.6]
<a href="recipes/df1dim.for"><b>df1dim</b></a> alternative function used by LINMIN
 (<a href="examples/xdf1dim.for">example</a>)<li>[10.7]
<a href="recipes/dfpmin.for"><b>dfpmin</b></a> minimize in N-dimensions by variable metric method
 (<a href="examples/xdfpmin.for">example</a>)<li>[10.8]
<a href="recipes/simplx.for"><b>simplx</b></a> linear programming maximization of a linear function
 (<a href="examples/xsimplx.for">example</a>)<li>[10.8]
<a href="recipes/simp1.for"><b>simp1</b></a> linear programming, used by SIMPLX
<li>[10.8]
<a href="recipes/simp2.for"><b>simp2</b></a> linear programming, used by SIMPLX
<li>[10.8]
<a href="recipes/simp3.for"><b>simp3</b></a> linear programming, used by SIMPLX
<li>[10.9]
<a href="recipes/anneal.for"><b>anneal</b></a> traveling salesman problem by simulated annealing
 (<a href="examples/xanneal.for">example</a>)<li>[10.9]
<a href="recipes/revcst.for"><b>revcst</b></a> cost of a reversal, used by anneal
<li>[10.9]
<a href="recipes/revers.for"><b>revers</b></a> do a reversal, used by anneal
<li>[10.9]
<a href="recipes/trncst.for"><b>trncst</b></a> cost of a transposition, used by anneal
<li>[10.9]
<a href="recipes/trnspt.for"><b>trnspt</b></a> do a transposition, used by anneal
<li>[10.9]
<a href="recipes/metrop.for"><b>metrop</b></a> Metropolis algorithm, used by anneal
<li>[10.9]
<a href="recipes/amebsa.for"><b>amebsa</b></a> simulated annealing in continuous spaces
 (<a href="examples/xamebsa.for">example</a>)<li>[10.9]
<a href="recipes/amotsa.for"><b>amotsa</b></a> evaluate a trial point, used by amebsa
</menu>
<h3><a name="C11"></A><A HREF="toc.htm#C11">Chapter
11</a></h3>
<menu>
<li>[11.1]
<a href="recipes/jacobi.for"><b>jacobi</b></a> eigenvalues and eigenvectors of a symmetric matrix
 (<a href="examples/xjacobi.for">example</a>)<li>[11.1]
<a href="recipes/eigsrt.for"><b>eigsrt</b></a> eigenvectors, sorts into order by eigenvalue
 (<a href="examples/xeigsrt.for">example</a>)<li>[11.2]
<a href="recipes/tred2.for"><b>tred2</b></a> Householder reduction of a real, symmetric matrix
 (<a href="examples/xtred2.for">example</a>)<li>[11.3]
<a href="recipes/tqli.for"><b>tqli</b></a> eigensolution of a symmetric tridiagonal matrix
 (<a href="examples/xtqli.for">example</a>)<li>[11.5]
<a href="recipes/balanc.for"><b>balanc</b></a> balance a nonsymmetric matrix
 (<a href="examples/xbalanc.for">example</a>)<li>[11.5]
<a href="recipes/elmhes.for"><b>elmhes</b></a> reduce a general matrix to Hessenberg form
 (<a href="examples/xelmhes.for">example</a>)<li>[11.6]
<a href="recipes/hqr.for"><b>hqr</b></a> eigenvalues of a Hessenberg matrix
 (<a href="examples/xhqr.for">example</a>)</menu>
<h3><a name="C12"></A><A HREF="toc.htm#C12">Chapter
12</a></h3>
<menu>
<li>[12.2]
<a href="recipes/four1.for"><b>four1</b></a> fast Fourier transform (FFT) in one dimension
 (<a href="examples/xfour1.for">example</a>)<li>[12.3]
<a href="recipes/twofft.for"><b>twofft</b></a> fast Fourier transform of two real functions
 (<a href="examples/xtwofft.for">example</a>)<li>[12.3]
<a href="recipes/realft.for"><b>realft</b></a> fast Fourier transform of a single real function
 (<a href="examples/xrealft.for">example</a>)<li>[12.3]
<a href="recipes/sinft.for"><b>sinft</b></a> fast sine transform
 (<a href="examples/xsinft.for">example</a>)<li>[12.3]
<a href="recipes/cosft1.for"><b>cosft1</b></a> fast cosine transform with endpoints
 (<a href="examples/xcosft1.for">example</a>)<li>[12.3]
<a href="recipes/cosft2.for"><b>cosft2</b></a> ``staggered'' fast cosine transform
 (<a href="examples/xcosft2.for">example</a>)<li>[12.4]
<a href="recipes/fourn.for"><b>fourn</b></a> fast Fourier transform in multidimensions
 (<a href="examples/xfourn.for">example</a>)<li>[12.5]
<a href="recipes/rlft3.for"><b>rlft3</b></a> FFT of real data in two or three dimensions
 (<a href="examples/xrlft3.for">example</a>)<li>[12.6]
<a href="recipes/fourfs.for"><b>fourfs</b></a> FFT for huge data sets on external media
 (<a href="examples/xfourfs.for">example</a>)<li>[12.6]
<a href="recipes/fourew.for"><b>fourew</b></a> rewind and permute files, used by fourfs
</menu>
<h3><a name="C13"></A><A HREF="toc.htm#C13">Chapter
13</a></h3>
<menu>
<li>[13.1]
<a href="recipes/convlv.for"><b>convlv</b></a> convolution or deconvolution of data using FFT
 (<a href="examples/xconvlv.for">example</a>)<li>[13.2]
<a href="recipes/correl.for"><b>correl</b></a> correlation or autocorrelation of data using FFT
 (<a href="examples/xcorrel.for">example</a>)<li>[13.4]
<a href="recipes/spctrm.for"><b>spctrm</b></a> power spectrum estimation using FFT
 (<a href="examples/xspctrm.for">example</a>)<li>[13.6]
<a href="recipes/memcof.for"><b>memcof</b></a> evaluate maximum entropy (MEM) coefficients
 (<a href="examples/xmemcof.for">example</a>)<li>[13.6]
<a href="recipes/fixrts.for"><b>fixrts</b></a> reflect roots of a polynomial into unit circle
 (<a href="examples/xfixrts.for">example</a>)<li>[13.6]
<a href="recipes/predic.for"><b>predic</b></a> linear prediction using MEM coefficients
 (<a href="examples/xpredic.for">example</a>)<li>[13.7]
<a href="recipes/evlmem.for"><b>evlmem</b></a> power spectral estimation from MEM coefficients
 (<a href="examples/xevlmem.for">example</a>)<li>[13.8]
<a href="recipes/period.for"><b>period</b></a> power spectrum of unevenly sampled data
 (<a href="examples/xperiod.for">example</a>)<li>[13.8]
<a href="recipes/fasper.for"><b>fasper</b></a> power spectrum of unevenly sampled larger data sets
 (<a href="examples/xfasper.for">example</a>)<li>[13.8]
<a href="recipes/spread.for"><b>spread</b></a> extirpolate value into array, used by fasper
<li>[13.9]
<a href="recipes/dftcor.for"><b>dftcor</b></a> compute endpoint corrections for Fourier integrals
<li>[13.9]
<a href="recipes/dftint.for"><b>dftint</b></a> high-accuracy Fourier integrals
 (<a href="examples/xdftint.for">example</a>)<li>[13.10]
<a href="recipes/wt1.for"><b>wt1  </b></a> one-dimensional discrete wavelet transform
<li>[13.10]
<a href="recipes/daub4.for"><b>daub4</b></a> Daubechies 4-coefficient wavelet filter
<li>[13.10]
<a href="recipes/pwtset.for"><b>pwtset</b></a> initialize coefficients for pwt
<li>[13.10]
<a href="recipes/pwt.for"><b>pwt  </b></a> partial wavelet transform
<li>[13.10]
<a href="recipes/wtn.for"><b>wtn  </b></a> multidimensional discrete wavelet transform
</menu>
<h3><a name="C14"></A><A HREF="toc.htm#C14">Chapter
14</a></h3>
<menu>
<li>[14.1]
<a href="recipes/moment.for"><b>moment</b></a> calculate moments of a data set
 (<a href="examples/xmoment.for">example</a>)<li>[14.2]
<a href="recipes/ttest.for"><b>ttest</b></a> Student's t-test for difference of means
 (<a href="examples/xttest.for">example</a>)<li>[14.2]
<a href="recipes/avevar.for"><b>avevar</b></a> calculate mean and variance of a data set
 (<a href="examples/xavevar.for">example</a>)<li>[14.2]
<a href="recipes/tutest.for"><b>tutest</b></a> Student's t-test for means, case of unequal variances
 (<a href="examples/xtutest.for">example</a>)<li>[14.2]
<a href="recipes/tptest.for"><b>tptest</b></a> Student's t-test for means, case of paired data
 (<a href="examples/xtptest.for">example</a>)<li>[14.2]
<a href="recipes/ftest.for"><b>ftest</b></a> F-test for difference of variances
 (<a href="examples/xftest.for">example</a>)<li>[14.3]
<a href="recipes/chsone.for"><b>chsone</b></a> chi-square test for difference between data and model
 (<a href="examples/xchsone.for">example</a>)<li>[14.3]
<a href="recipes/chstwo.for"><b>chstwo</b></a> chi-square test for difference between two data sets
 (<a href="examples/xchstwo.for">example</a>)<li>[14.3]
<a href="recipes/ksone.for"><b>ksone</b></a> Kolmogorov-Smirnov test of data against model
 (<a href="examples/xksone.for">example</a>)<li>[14.3]
<a href="recipes/kstwo.for"><b>kstwo</b></a> Kolmogorov-Smirnov test between two data sets
 (<a href="examples/xkstwo.for">example</a>)<li>[14.3]
<a href="recipes/probks.for"><b>probks</b></a> Kolmogorov-Smirnov probability function
 (<a href="examples/xprobks.for">example</a>)<li>[14.4]
<a href="recipes/cntab1.for"><b>cntab1</b></a> contingency table analysis using chi-square
 (<a href="examples/xcntab1.for">example</a>)<li>[14.4]
<a href="recipes/cntab2.for"><b>cntab2</b></a> contingency table analysis using entropy measure
 (<a href="examples/xcntab2.for">example</a>)<li>[14.5]
<a href="recipes/pearsn.for"><b>pearsn</b></a> Pearson's correlation between two data sets
 (<a href="examples/xpearsn.for">example</a>)<li>[14.6]
<a href="recipes/spear.for"><b>spear</b></a> Spearman's rank correlation between two data sets
 (<a href="examples/xspear.for">example</a>)<li>[14.6]
<a href="recipes/crank.for"><b>crank</b></a> replaces array elements by their rank
 (<a href="examples/xcrank.for">example</a>)<li>[14.6]
<a href="recipes/kendl1.for"><b>kendl1</b></a> correlation between two data sets, Kendall's tau
 (<a href="examples/xkendl1.for">example</a>)<li>[14.6]
<a href="recipes/kendl2.for"><b>kendl2</b></a> contingency table analysis using Kendall's tau
 (<a href="examples/xkendl2.for">example</a>)<li>[14.7]
<a href="recipes/ks2d1s.for"><b>ks2d1s</b></a> K--S test in two dimensions, data vs. model
 (<a href="examples/xks2d1s.for">example</a>)<li>[14.7]
<a href="recipes/quadct.for"><b>quadct</b></a> count points by quadrants, used by ks2d1s
<li>[14.7]
<a href="recipes/quadvl.for"><b>quadvl</b></a> quadrant probabilities, used by ks2d1s
<li>[14.7]
<a href="recipes/ks2d2s.for"><b>ks2d2s</b></a> K--S test in two dimensions, data vs. data
 (<a href="examples/xks2d2s.for">example</a>)<li>[14.8]
<a href="recipes/savgol.for"><b>savgol</b></a> Savitzky-Golay smoothing coefficients
 (<a href="examples/xsavgol.for">example</a>)</menu>
<h3><a name="C15"></A><A HREF="toc.htm#C15">Chapter
15</a></h3>
<menu>
<li>[15.2]
<a href="recipes/fit.for"><b>fit</b></a> least-squares fit data to a straight line
 (<a href="examples/xfit.for">example</a>)<li>[15.3]
<a href="recipes/fitexy.for"><b>fitexy</b></a> fit data to a straight line, errors in both x and y
 (<a href="examples/xfitexy.for">example</a>)<li>[15.3]
<a href="recipes/chixy.for"><b>chixy</b></a> used by fitexy to calculate a chi^2
<li>[15.4]
<a href="recipes/lfit.for"><b>lfit</b></a> general linear least-squares fit by normal equations
 (<a href="examples/xlfit.for">example</a>)<li>[15.4]
<a href="recipes/covsrt.for"><b>covsrt</b></a> rearrange covariance matrix, used by LFIT
 (<a href="examples/xcovsrt.for">example</a>)<li>[15.4]
<a href="recipes/svdfit.for"><b>svdfit</b></a> linear least-squares fit by singular value decomposition
 (<a href="examples/xsvdfit.for">example</a>)<li>[15.4]
<a href="recipes/svdvar.for"><b>svdvar</b></a> variances from singular value decomposition
 (<a href="examples/xsvdvar.for">example</a>)<li>[15.4]
<a href="recipes/fpoly.for"><b>fpoly</b></a> fit a polynomial using LFIT or SVDFIT
 (<a href="examples/xfpoly.for">example</a>)<li>[15.4]
<a href="recipes/fleg.for"><b>fleg</b></a> fit a Legendre polynomial using LFIT or SVDFIT
 (<a href="examples/xfleg.for">example</a>)<li>[15.5]
<a href="recipes/mrqmin.for"><b>mrqmin</b></a> nonlinear least-squares fit, Marquardt's method
 (<a href="examples/xmrqmin.for">example</a>)<li>[15.5]
<a href="recipes/mrqcof.for"><b>mrqcof</b></a> used by MRQMIN to evaluate coefficients
 (<a href="examples/xmrqcof.for">example</a>)<li>[15.5]
<a href="recipes/fgauss.for"><b>fgauss</b></a> fit a sum of Gaussians using MRQMIN
 (<a href="examples/xfgauss.for">example</a>)<li>[15.7]
<a href="recipes/medfit.for"><b>medfit</b></a> fit data to a straight line robustly, least absolute deviation
 (<a href="examples/xmedfit.for">example</a>)<li>[15.7]
<a href="recipes/rofunc.for"><b>rofunc</b></a> fit data robustly, used by MEDFIT
 (<a href="examples/xrofunc.for">example</a>)</menu>
<h3><a name="C16"></A><A HREF="toc.htm#C16">Chapter
16</a></h3>
<menu>
<li>[16.1]
<a href="recipes/rk4.for"><b>rk4</b></a> integrate one step of ODEs, fourth-order Runge-Kutta
 (<a href="examples/xrk4.for">example</a>)<li>[16.1]
<a href="recipes/rkdumb.for"><b>rkdumb</b></a> integrate ODEs by fourth-order Runge-Kutta
 (<a href="examples/xrkdumb.for">example</a>)<li>[16.2]
<a href="recipes/rkqs.for"><b>rkqs</b></a> integrate one step of ODEs with accuracy monitoring
 (<a href="examples/xrkqs.for">example</a>)<li>[16.2]
<a href="recipes/rkck.for"><b>rkck</b></a> Cash-Karp-Runge-Kutta step used by rkqs
<li>[16.2]
<a href="recipes/odeint.for"><b>odeint</b></a> integrate ODEs with accuracy monitoring
 (<a href="examples/xodeint.for">example</a>)<li>[16.3]
<a href="recipes/mmid.for"><b>mmid</b></a> integrate ODEs by modified midpoint method
 (<a href="examples/xmmid.for">example</a>)<li>[16.4]
<a href="recipes/bsstep.for"><b>bsstep</b></a> integrate ODEs, Bulirsch-Stoer step
 (<a href="examples/xbsstep.for">example</a>)<li>[16.4]
<a href="recipes/pzextr.for"><b>pzextr</b></a> polynomial extrapolation, used by BSSTEP
 (<a href="examples/xpzextr.for">example</a>)<li>[16.4]
<a href="recipes/rzextr.for"><b>rzextr</b></a> rational function extrapolation, used by BSSTEP
 (<a href="examples/xrzextr.for">example</a>)<li>[16.5]
<a href="recipes/stoerm.for"><b>stoerm</b></a> integrate conservative second-order ODEs
 (<a href="examples/xstoerm.for">example</a>)<li>[16.6]
<a href="recipes/stiff.for"><b>stiff</b></a> integrate stiff ODEs by fourth-order Rosenbrock
 (<a href="examples/xstiff.for">example</a>)<li>[16.6]
<a href="recipes/jacobn.for"><b>jacobn</b></a> sample Jacobian routine for stiff
<li>[16.6]
<a href="recipes/jacobn.for"><b>derivs</b></a> sample derivatives routine for stiff
<li>[16.6]
<a href="recipes/simpr.for"><b>simpr</b></a> integrate stiff ODEs by semi-implicit midpoint rule
 (<a href="examples/xsimpr.for">example</a>)<li>[16.6]
<a href="recipes/stifbs.for"><b>stifbs</b></a> integrate stiff ODEs, Bulirsch-Stoer step
 (<a href="examples/xstifbs.for">example</a>)</menu>
<h3><a name="C17"></A><A HREF="toc.htm#C17">Chapter
17</a></h3>
<menu>
<li>[17.1]
<a href="recipes/shoot.for"><b>shoot</b></a> solve two point boundary value problem by shooting
<li>[17.2]
<a href="recipes/shootf.for"><b>shootf</b></a> ditto, by shooting to a fitting point
<li>[17.3]
<a href="recipes/solvde.for"><b>solvde</b></a> two point boundary value problem, solve by relaxation
<li>[17.3]
<a href="recipes/bksub.for"><b>bksub</b></a> backsubstitution, used by SOLVDE
<li>[17.3]
<a href="recipes/pinvs.for"><b>pinvs</b></a> diagonalize a sub-block, used by SOLVDE
<li>[17.3]
<a href="recipes/red.for"><b>red</b></a> reduce columns of a matrix, used by SOLVDE
<li>[17.4]
<a href="recipes/sfroid.for"><b>sfroid</b></a> spheroidal functions by method of SOLVDE
<li>[17.4]
<a href="recipes/difeq.for"><b>difeq</b></a> spheroidal matrix coefficients, used by SFROID
<li>[17.4]
<a href="recipes/sphoot.for"><b>sphoot</b></a> spheroidal functions by method of shoot
<li>[17.4]
<a href="recipes/sphfpt.for"><b>sphfpt</b></a> spheroidal functions by method of shootf
 (<a href="examples/xsphfpt.for">example</a>)</menu>
<h3><a name="C18"></A><A HREF="toc.htm#C18">Chapter
18</a></h3>
<menu>
<li>[18.1]
<a href="recipes/fred2.for"><b>fred2</b></a> solve linear Fredholm equations of the second kind
 (<a href="examples/xfred2.for">example</a>)<li>[18.1]
<a href="recipes/fredin.for"><b>fredin</b></a> interpolate solutions obtained with fred2
 (<a href="examples/xfredin.for">example</a>)<li>[18.2]
<a href="recipes/voltra.for"><b>voltra</b></a> linear Volterra equations of the second kind
 (<a href="examples/xvoltra.for">example</a>)<li>[18.3]
<a href="recipes/wwghts.for"><b>wwghts</b></a> quadrature weights for an arbitrarily singular kernel
<li>[18.3]
<a href="recipes/kermom.for"><b>kermom</b></a> sample routine for moments of a singular kernel
<li>[18.3]
<a href="recipes/quadmx.for"><b>quadmx</b></a> sample routine for a quadrature matrix
<li>[18.3]
<a href="recipes/fredex.for"><b>fredex</b></a> example of solving a singular Fredholm equation
</menu>
<h3><a name="C19"></A><A HREF="toc.htm#C19">Chapter
19</a></h3>
<menu>
<li>[19.5]
<a href="recipes/sor.for"><b>sor</b></a> elliptic PDE solved by successive overrelaxation method
 (<a href="examples/xsor.for">example</a>)<li>[19.6]
<a href="recipes/mglin.for"><b>mglin</b></a> linear elliptic PDE solved by multigrid method
 (<a href="examples/xmglin.for">example</a>)<li>[19.6]
<a href="recipes/rstrct.for"><b>rstrct</b></a> half-weighting restriction, used by mglin, mgfas
<li>[19.6]
<a href="recipes/interp.for"><b>interp</b></a> bilinear prolongation, used by mglin, mgfas
<li>[19.6]
<a href="recipes/addint.for"><b>addint</b></a> interpolate and add, used by mglin
<li>[19.6]
<a href="recipes/slvsml.for"><b>slvsml</b></a> solve on coarsest grid, used by mglin
<li>[19.6]
<a href="recipes/relax.for"><b>relax</b></a> Gauss-Seidel relaxation, used by mglin
<li>[19.6]
<a href="recipes/resid.for"><b>resid</b></a> calculate residual, used by mglin
<li>[19.6]
<a href="recipes/copy.for"><b>copy </b></a> utility used by mglin, mgfas
<li>[19.6]
<a href="recipes/fill0.for"><b>fill0</b></a> utility used by mglin
<li>[19.6]
<a href="recipes/maloc.for"><b>maloc</b></a> memory allocation utility used by mglin, mgfas
<li>[19.6]
<a href="recipes/mgfas.for"><b>mgfas</b></a> nonlinear elliptic PDE solved by multigrid method
 (<a href="examples/xmgfas.for">example</a>)<li>[19.6]
<a href="recipes/relax2.for"><b>relax2</b></a> Gauss-Seidel relaxation, used by mgfas
<li>[19.6]
<a href="recipes/slvsm2.for"><b>slvsm2</b></a> solve on coarsest grid, used by mgfas
<li>[19.6]
<a href="recipes/lop.for"><b>lop  </b></a> applies nonlinear operator, used by mgfas
<li>[19.6]
<a href="recipes/matadd.for"><b>matadd</b></a> utility used by mgfas
<li>[19.6]
<a href="recipes/matsub.for"><b>matsub</b></a> utility used by mgfas
<li>[19.6]
<a href="recipes/anorm2.for"><b>anorm2</b></a> utility used by mgfas
</menu>
<h3><a name="C20"></A><A HREF="toc.htm#C20">Chapter
20</a></h3>
<menu>
<li>[20.1]
<a href="recipes/machar.for"><b>machar</b></a> diagnose computer's floating arithmetic
 (<a href="examples/xmachar.for">example</a>)<li>[20.2]
<a href="recipes/igray.for"><b>igray</b></a> Gray code and its inverse
 (<a href="examples/xigray.for">example</a>)<li>[20.3]
<a href="recipes/icrc1.for"><b>icrc1</b></a> cyclic redundancy checksum, used by icrc
<li>[20.3]
<a href="recipes/icrc.for"><b>icrc</b></a> cyclic redundancy checksum
 (<a href="examples/xicrc.for">example</a>)<li>[20.3]
<a href="recipes/decchk.for"><b>decchk</b></a> decimal check digit calculation or verification
 (<a href="examples/xdecchk.for">example</a>)<li>[20.4]
<a href="recipes/hufmak.for"><b>hufmak</b></a> construct a Huffman code
<li>[20.4]
<a href="recipes/hufapp.for"><b>hufapp</b></a> append bits to a Huffman code, used by hufmak
<li>[20.4]
<a href="recipes/hufenc.for"><b>hufenc</b></a> use Huffman code to encode and compress a character
<li>[20.4]
<a href="recipes/hufdec.for"><b>hufdec</b></a> use Huffman code to decode and decompress a character
 (<a href="examples/xhuffman.for">example</a>)
<li>[20.5]
<a href="recipes/arcmak.for"><b>arcmak</b></a> construct an arithmetic code
<li>[20.5]
<a href="recipes/arcode.for"><b>arcode</b></a> encode or decode a character using arithmetic coding
 (<a href="examples/xarcode.for">example</a>)<li>[20.5]
<a href="recipes/arcsum.for"><b>arcsum</b></a> add integer to byte string, used by arcode
<li>[20.6]
<a href="recipes/mpops.for"><b>mpops</b></a> multiple precision arithmetic, simpler operations
<li>[20.6]
<a href="recipes/mpmul.for"><b>mpmul</b></a> multiple precision multiply, using FFT methods
<li>[20.6]
<a href="recipes/mpinv.for"><b>mpinv</b></a> multiple precision reciprocal
<li>[20.6]
<a href="recipes/mpdiv.for"><b>mpdiv</b></a> multiple precision divide and remainder
<li>[20.6]
<a href="recipes/mpsqrt.for"><b>mpsqrt</b></a> multiple precision square root
<li>[20.6]
<a href="recipes/mp2dfr.for"><b>mp2dfr</b></a> multiple precision conversion to decimal base
<li>[20.6]
<a href="recipes/mppi.for"><b>mppi</b></a> multiple precision example, compute many digits of pi
 (<a href="examples/xmppi.for">example</a>)</menu>
</body></html>
