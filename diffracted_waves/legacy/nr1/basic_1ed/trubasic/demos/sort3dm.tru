PROGRAM D8r6

! Driver for routine sort3

LIBRARY "sort3"

LET nlen = 64
DIM a(0), b(0), c(0), wksp(0), indx(0), amsg$(0), bmsg$(0), cmsg$(0)
MAT redim a(nlen), b(nlen), c(nlen), wksp(nlen), indx(nlen)
MAT redim amsg$(nlen), bmsg$(nlen), cmsg$(nlen)

CLEAR
LET msg1$ = "I'd rather have a bottle in front"
LET msg2$ = " of me than a frontal lobotomy."
PRINT "Original message:"
FOR j = 1 to 64
    LET amsg$(j) = (msg1$ & msg2$)[j:j]
    PRINT amsg$(j);
NEXT j
PRINT

! Read array of random numbers

OPEN #1: name "tarray.dat", access input
FOR i = 1 to int(nlen / 10)
    LINE INPUT #1: dum$
    FOR j = 1 to 10
        LET a(10 * (i - 1) + j) = val(dum$[6*j-5:6*j])
    NEXT j
NEXT i
LINE INPUT #1: dum$
FOR j = 1 to mod(nlen, 10)
    LET a(10 * int(nlen / 10) + j) = val(dum$[6*j-5:6*j])
NEXT j
CLOSE #1

! Create array B and array C

FOR i = 1 to nlen
    LET b(i) = i
    LET c(i) = nlen + 1 - i
NEXT i

! Sort array A while mixing B and C

CALL sort3 (nlen, a(), b(), c(), wksp(), indx())

! Scramble message according to array B

FOR i = 1 to nlen
    LET bmsg$(i) = amsg$(b(i))
NEXT i
PRINT
PRINT "Scrambled message:"
FOR j = 1 to 64
    PRINT bmsg$(j);
NEXT j
PRINT

! Unscramble according to array C

FOR i = 1 to nlen
    LET cmsg$(c(i)) = bmsg$(i)
NEXT i
PRINT
PRINT "Mirrored message:"
FOR j = 1 to 64
    PRINT cmsg$(j);
NEXT j
PRINT

END
